server.servlet.context-path=/apirelatorio
http.port=5551

health.servico.nome=apirelatorio
health.servico.redis=true
health.servico.minutos=5

spring.datasource.url-base=jdbc:sqlserver://10.10.253.218:1433;databaseName=
spring.datasource.url=jdbc:sqlserver://10.10.253.218:1433;databaseName=TopPontoWeb_Gerenciamento
spring.datasource.username=sa
spring.datasource.password=Abc123456
spring.datasource.server=jdbc:sqlserver://10.10.253.218:1433
spring.datasource.databasename=TopPontoWeb_Gerenciamento

baseUrlApiCadastro:http://localhost:8099/apicadastro/
baseUrlApiColeta:http://localhost:5553/apicoleta/
baseUrlApiAuth:http://localhost:8099/apicadastro/
baseUrlApiCalculo:http://localhost:8099/apitopponto/
baseUrlApiImport:http://localhost:5552/apiimport/
baseUrlApiRelatorio:http://localhost:5551/apirelatorio/
baseUrlApiBackground=http://localhost:5550/apibackground/
baseUrlApiApp=http://localhost:5550/apiapp/
baseUrlApiGerenciamento:http://localhost:8085/ApiGerenciamento/

#------------- configurações do proxy ------
proxy.user=toppontoweb
proxy.password=TpW@T04
proxy.port=8080
proxy.host=10.0.0.7

spring.cache.type=redis
spring.redis.host=10.10.253.218
spring.redis.port=6379
spring.redis.password=Abc1234
spring.redis.ssl=false

spring.cloud.azure.storage.container-name=topponto-local

#spring.data.mongodb.uri=mongodb://10.0.90.1:27017

topponto.tabelaPendencias=topponto_local

servidor2.dominio = topdata.com.br:8090
servidor2.protocolo = http://


#-------------------configuracao SSL-------------
#server.port=8087
#server.ssl.enabled=true
#server.ssl.key-alias=selfsigned
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-type= JKS
#server.ssl.key-store-password=Abc1234
#server.ssl.key-password=Abc1234
#server.ssl.ciphers=TLS_RSA_WITH_AES_128_CBC_SHA 
#server.ssl.ciphers=TLS_RSA_WITH_AES_128_CBC_SHA256
#server.ssl.protocol=TLS
#-------------------------------------------------

spring.kafka.bootstrap-servers:10.10.253.218:19092
#spring.kafka.properties.security.sasl.mechanism:PLAIN
#spring.kafka.properties.security.protocol=SASL_PLAINTEXT
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="user" password="NeT4153vHNc9";
#spring.kafka.jaas.enabled:true
#spring.kafka.jaas.login-module:org.apache.kafka.common.security.plain.PlainLoginModule
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.bootstrap-servers=191.234.185.212:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.listener.ack-mode:manual
spring.kafka.consumer.bootstrap-servers=10.10.253.218:19092

#spring.kafka.producer.bootstrap-servers=191.234.185.212:9092
spring.kafka.producer.group.id=group-id
spring.kafka.producer.bootstrap-servers=10.10.253.218:19092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer