server.servlet.context-path=/apitopponto
http.port=8099

health.servico.nome=apitopponto
health.servico.redis=true
health.servico.minutos=5

spring.datasource.url-base=jdbc:sqlserver://10.10.253.218:1433;databaseName=
spring.datasource.url=jdbc:sqlserver://10.10.253.218:1433;databaseName=TopPontoWeb_Gerenciamento
spring.datasource.username=sa
spring.datasource.password=Abc123456
spring.datasource.server=jdbc:sqlserver://10.10.253.218:1433
spring.datasource.databasename=TopPontoWeb_Gerenciamento

baseUrlApiCadastro:http://localhost:8099/apitopponto/
baseUrlApiColeta=http://localhost:8099/apitopponto/
baseUrlApiAuth:http://localhost:8099/apitopponto/
baseUrlApiCalculo:http://localhost:8099/apitopponto/
baseUrlApiImport:http://localhost:8099/apitopponto/
baseUrlApiRelatorio:http://localhost:8099/apitopponto/
baseUrlApiGerenciamento:http://localhost:8085/ApiGerenciamento/

#------------- configurações do proxy ------
proxy.user=toppontoweb
proxy.password=TpW@T04
proxy.port=8080
proxy.host=10.0.0.7

spring.cache.type=redis
spring.redis.host=10.10.253.218
spring.redis.port=6379
spring.redis.password=Abc1234
spring.redis.ssl=false
spring.redis.connTimeout=100000
spring.redis.CachingTime=900
spring.redis.maxIdle=300
spring.redis.maxActive=600
spring.redis.maxWait=2
spring.redis.maxTotal=1000
spring.redis.maxWaitMillis=3000
spring.redis.minEvictableIdleTimeMillis=300000
spring.redis.numTestsPerEvictionRun=1024
spring.redis.timeBetweenEvictionRunsMillis=30000
spring.redis.testOnBorrow=true
spring.redis.testOnReturn=true
spring.redis.testWhileIdle=true

spring.cloud.azure.storage.container-name=topponto-local

#spring.data.mongodb.uri=mongodb://10.0.90.1:27017

topponto.tabelaPendencias=topponto_local

servidor2.dominio = topdata.com.br:8090
servidor2.protocolo = http://

spring.kafka.bootstrap-servers=10.10.253.218:19092

spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.listener.ack-mode:manual

spring.kafka.producer.group.id=group-id
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer